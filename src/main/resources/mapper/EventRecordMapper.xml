<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.season.dao.EventRecordMapper">

  <resultMap id="BaseResultMap" type="com.season.model.EventRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="event" jdbcType="VARCHAR" property="event" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="score" jdbcType="DOUBLE" property="score" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
  </resultMap>

  <sql id="queryRecordListCondition">
    <if test="userId != null and userId != ''">
      and id=#{userId}
    </if>
    <if test="createTime != null">
      and create_time >= #{createTime}
    </if>
  </sql>

  <sql id="Base_Column_List">
    id, event, user_id, desc, score, create_time, create_user, update_time, update_user
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_event_record
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="queryListByCondition" parameterType="com.season.model.QueryEventRecordCondition" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List" />
    from t_event_record
    <where>
      <include refid="queryRecordListCondition"/>
    </where>
    order by id
    limit #{offset}, #{pageSize}
  </select>

  <select id="getTotalByCondition" parameterType="com.season.model.QueryEventRecordCondition" resultType="java.lang.Integer">
    select count(1) from t_event_record
    <where>
      <include refid="queryRecordListCondition"/>
    </where>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_event_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.season.model.EventRecord">
    insert into t_event_record (id, event, user_id, 
      desc, score, create_time, 
      create_user, update_time, update_user
      )
    values (#{id,jdbcType=INTEGER}, #{event,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{desc,jdbcType=VARCHAR}, #{score,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.season.model.EventRecord">
    insert into t_event_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="event != null">
        event,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="desc != null">
        desc,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="event != null">
        #{event,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
    </trim>

    <selectKey resultType="int" keyProperty="id">
      SELECT LAST_INSERT_ID() AS id FROM t_event_record LIMIT 1
    </selectKey>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.season.model.EventRecord">
    update t_event_record
    <set>
      <if test="event != null">
        event = #{event,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="desc != null">
        desc = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.season.model.EventRecord">
    update t_event_record
    set event = #{event,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      desc = #{desc,jdbcType=VARCHAR},
      score = #{score,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>